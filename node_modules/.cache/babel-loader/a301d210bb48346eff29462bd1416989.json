{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aschnall/Documents/Udemy/Web Developer/facerecognitionbrain/src/App.js\";\nimport React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '6eb7786d20e7458d8492db601631dcd5'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {}\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.width);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = async () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      let response = await app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input);\n      this.displayFaceBox(this.calculateFaceLocation(response));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageURL: this.state.imageURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aschnall/Documents/Udemy/Web Developer/facerecognitionbrain/src/App.js"],"names":["React","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","Component","state","input","imageURL","box","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","setState","onInputChange","event","target","onButtonSubmit","response","models","predict","FACE_DETECT_MODEL","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: '6eb7786d20e7458d8492db601631dcd5'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends React.Component {\n\n  state = { input: '', imageURL: '', box: {} };\n\n  calculateFaceLocation = data => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.width);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = box => {\n    this.setState({ box: box });\n  }\n  \n  onInputChange = event => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = async () => {\n    this.setState({imageURL: this.state.input});\n    let response = await app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input);\n    this.displayFaceBox(this.calculateFaceLocation(response));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\"\n          params={particlesOptions}\n        />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition imageURL={this.state.imageURL}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}