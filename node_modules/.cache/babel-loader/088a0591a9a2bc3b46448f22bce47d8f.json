{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aschnall/Documents/Udemy/Web Developer/smart-brain/src/App.js\";\nimport React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '6eb7786d20e7458d8492db601631dcd5'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageURL: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onPictureSubmit = async () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      let response = await app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input);\n\n      if (response) {\n        const image = async () => {\n          let count = await fetch('http://localhost:3001/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          });\n          count = await count.json();\n          this.setState(Object.assign(this.state.user, {\n            entries: count\n          }));\n        };\n\n        image();\n      }\n\n      this.displayFaceBox(this.calculateFaceLocation(response));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signin') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageURL,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: isSignedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onPictureSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageURL: imageURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aschnall/Documents/Udemy/Web Developer/smart-brain/src/App.js"],"names":["React","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","SignIn","Register","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageURL","box","route","isSignedIn","user","id","name","email","entries","joined","Component","state","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onPictureSubmit","response","models","predict","FACE_DETECT_MODEL","count","fetch","method","headers","body","JSON","stringify","json","Object","assign","onRouteChange","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: '6eb7786d20e7458d8492db601631dcd5'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = { input: '', \n            imageURL: '', \n            box: {}, \n            route: 'signin', \n            isSignedIn: false,\n            user: {\n              id: '',\n              name: '',\n              email: '',\n              entries: 0,\n              joined: ''\n            }\n          };\n\nclass App extends React.Component {\n\n  state = initialState\n\n  loadUser = data => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = data => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = box => {\n    this.setState({ box: box });\n  }\n  \n  onInputChange = event => {\n    this.setState({input: event.target.value});\n  }\n\n  onPictureSubmit = async () => {\n    this.setState({imageURL: this.state.input});\n    let response = await app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input);\n    if (response) {\n      const image = async () => {\n        let count = await fetch('http://localhost:3001/image', {\n                                  method: 'put',\n                                  headers: {'Content-Type': 'application/json'},\n                                  body: JSON.stringify({\n                                    id: this.state.user.id \n                                  })\n                                })\n        count = await count.json();\n        this.setState(Object.assign(this.state.user, {entries: count}));\n      }\n      image();\n    }\n    this.displayFaceBox(this.calculateFaceLocation(response));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signin') {\n      this.setState({isSignedIn:false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const {isSignedIn, imageURL, route, box} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\"\n          params={particlesOptions}\n        />\n        <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n        {route === 'home'\n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onPictureSubmit}/>\n              <FaceRecognition box={box} imageURL={imageURL}/>\n            </div>\n          : (\n            route === 'signin'\n            ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}